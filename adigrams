#!/usr/bin/env python3

CAP = '+'
HORIZONTAL = '-_='
VERTICAL = '|!H'

N = 0
E = 1
S = 2
W = 3

Unicode_Box_Drawing_Characters = '''
╴    ╵    ╶    ╷    ╸    ╹    ╺    ╻
0001 1000 0100 0010 0002 2000 0200 0020

─    ━    │    ┃    ╼    ╽    ╾    ╿
0101 0202 1010 2020 0201 1020 0102 2010

┌    ┍    ┎    ┏    ┐    ┑    ┒    ┓
0110 0210 0120 0220 0011 0012 0021 0022

└    ┕    ┖    ┗    ┘    ┙    ┚    ┛
1100 1200 2100 2200 1001 1002 2001 2002

├    ┝    ┞    ┟    ┠    ┡    ┢    ┣
1110 1210 2110 1120 2120 2210 1220 2220

┤    ┥    ┦    ┧    ┨    ┩    ┪    ┫
1011 1012 2011 1021 2021 2012 1022 2022

┬    ┭    ┮    ┯    ┰    ┱    ┲    ┳
0111 0112 0211 0212 0121 0122 0221 0222

┴    ┵    ┶    ┷    ┸    ┹    ┺    ┻
1101 1102 1201 1202 2101 2102 2201 2202

┼    ┽    ┾    ┿    ╀    ╁    ╂    ╃
1111 1112 1211 1212 2111 1121 2121 2112

╄    ╅    ╆    ╇    ╈    ╉    ╊    ╋
2211 1122 1221 2212 1222 2122 2221 2222
'''


def build_unicode_lookup_table():
    table = dict()
    chunks = Unicode_Box_Drawing_Characters.split('\n\n')
    for chunk in chunks:
        lines = chunk.strip().splitlines()
        glyphs, patterns = map(str.split, lines)
        for glyph, pattern in zip(glyphs, patterns):
            pattern = tuple(int(w) for w in pattern)
            table[pattern] = glyph
    return table


def visit(grid):
    for y, row in enumerate(grid):
        for x, char in enumerate(row):
            yield (x, y), char


def parse(block):
    grid = [list(l) for l in block.splitlines()]

    bmp = dict()

    for p, char in visit(grid):
        bmp[p] = [0, 0, 0, 0]
        if char in HORIZONTAL:
            weight = HORIZONTAL.index(char) + 1
            bmp[p][E] = bmp[p][W] = weight
        elif char in VERTICAL:
            weight = VERTICAL.index(char) + 1
            bmp[p][N] = bmp[p][S] = weight

    for p, char in visit(grid):
        if char == CAP:
            bmp[p] = [0, 0, 0, 0]
            x, y = p
            n = (x, y - 1)
            s = (x, y + 1)
            e = (x + 1, y)
            w = (x - 1, y)
            if n in bmp: bmp[p][N] = bmp[n][S]
            if s in bmp: bmp[p][S] = bmp[s][N]
            if e in bmp: bmp[p][E] = bmp[e][W]
            if w in bmp: bmp[p][W] = bmp[w][E]

    glyphs = build_unicode_lookup_table()
    for p, quad in bmp.items():
        if quad == [0, 0, 0, 0]: continue
        x, y = p
        glyph = glyphs[tuple(quad)]
        grid[y][x] = glyph

    return '\n'.join(''.join(line) for line in grid)



print(parse('+--+'))

print(parse('+---+\n|   |\n+---+'))

print(parse('''

    +_________+
    !         !   for real
    !  ADI +--+---|------+
    !      |:)!   |      |
    +______+__+  GRAMS   |
           |             |
           +-- oh yeah --+

'''))
